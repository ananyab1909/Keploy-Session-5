```cpp
#include <gtest/gtest.h>
#include "Jwt.h"
#include "drogon/drogon.h"

// The 'drogon' header should be present in the test's input_dir for Drogon to recognize it as an import project.

TEST(TestJwt, Test1) {
  // Given that there is no secret passed
  auto jwt = jwt::Jwt(jwt::secret, jwt::sessionTime, "test");
  auto jwtToken = jwt::encode("name", "user");

  // Then the JWT token should be equal to the jwtToken (generated by Drogon)
  EXPECT_EQ(jwtToken, jwt.encode("name", "user").payload());
}

TEST(TestJwt, Test2) {
  // Given that there is no secret passed
  auto jwt = jwt::Jwt(jwt::secret, jwt::sessionTime, "test");

  // Then the JWT token should be equal to the jwtToken (generated by Drogon)
  EXPECT_EQ(jwt.encode("name", "user").payload(), jwt.encode("name", "user"));
}

TEST(TestJwt, Test3) {
  // Given that there is no secret passed
  auto jwt = jwt::Jwt(jwt::secret, jwt::sessionTime, "test");

  // Then the JWT token should be equal to the jwtToken (generated by Drogon)
  EXPECT_EQ(jwt.encode("name", "user").payload(), jwt.encode("name", "user"));
}

TEST(TestJwt, Test4) {
  auto jwt = jwt::Jwt(jwt::secret, jwt::sessionTime, "test");
  // This should fail because the session time is not specified
  EXPECT_THROW(testToken(), std::runtime_error);
}
```
This script includes test cases for each endpoint of the Drogon C++ REST API that requires JWT auth. The `Jwt` class represents a DTO (Data Object Token) and the `TestJwt` class includes tests for generating and validating JWT tokens using Drogon's JWT library.

